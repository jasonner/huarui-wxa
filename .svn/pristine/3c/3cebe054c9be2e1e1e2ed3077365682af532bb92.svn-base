// pages/demo/demo.js
const hrp = require('../../api/hrp.js');
import http from '../../utils/http.js';
const customer = require('../../api/customer.js')
const app = getApp()
var productDetailInfo = app.globalData.productDetailInfo;
var buyInfo = app.globalData.buyInfo;//购买信息
var orderInfo = app.globalData.orderInfo;//订单信息
var insuredInfo = app.globalData.insuredInfo;//被保人信息
var username = "";//用户名
var userId = "";//用户ID
var userPhoneNum = "";//用户手机号
Page({

  /**
   * 页面的初始数据
   */
  data: {
    userInfo: {},
    hasUserInfo: false,
    tipErrShow: true,
    canIUse: wx.canIUse('button.open-type.getUserInfo'),
    items: [
      { name: 'CHN', value: '', checked: 'true' }
    ],
    relationToAppnt: ['本人', '子女'], 
  },
  bindPickerChange: function (e) {
    console.log('picker发送选择改变，携带值为', e.detail.value)
    this.setData({
      index: e.detail.value
    })
  },
  userNameInput: function (e) {//用户姓名
    var userName = e.detail.value
    console.log(userName);
  },
  userIdInput:function(e){//用户身份证号
    var that  =this;
    var userId = e.detail.value
    console.log(userId)
    console.log(userId.length)
    var userIdLength = userId.length
    if(userIdLength<18){
        console.log("请输入大于18位长度的单位");
        this.setData({
          tipErrShow: false
        })  
        this.setData({
          tipErrText: "请输入正确的身份证号"
        })
        setTimeout(function(){
          that.setData({
            tipErrShow: true
          })  
        },5000)
    }else{
      this.setData({
        tipErrShow: true
      })
    }
  },
  userPhoneNumInput:function(e){//用户手机号
    var userPhoneNum = e.detail.value
    console.log(userPhoneNum)
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    this.setData({
      price: buyInfo.price 
    })
    customer.getCustomInfo({}).then((data)=>{
      console.log(data)
    })
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
         console.log(buyInfo);
         console.log(orderInfo);
         console.log(insuredInfo);
  },


  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {
  
  },

  // 校验年龄范围
  checkInsurdBirth:function (birthday){
    if(new Date(buyInfo.insuredEndDate).getTime() >= new Date(birthday).getTime() && new Date(birthday).getTime() >= new Date(buyInfo.insuredBeginDate).getTime()) {
        return true;
    } else {
             //$.alertMessage("请确认被保险人年龄在可保范围内");
        this.setData({
          tipErrText:"请确认被保险人年龄在可保范围内"
        })  
        return false;
    }
  },

  // 计算保费
  calPrem:function (planName, period, insurePeriodUnit, age, sex, payInterval, payIntervalType) {
      // 格式化性别
      if(sex == '1') {
        sex = '男';
      } else if (sex == '2') {
        sex = '女';
      } else if (sex == '0') {
        sex = '不详';
      }

      // 格式化保险期间
      if (insurePeriodUnit == "M") {
        period = period + "月";
      } else if (insurePeriodUnit == "D") {
        period = period + "天";
      } else if (insurePeriodUnit == "Y") {
        period = period + "年";
      } else if (insurePeriodUnit == "A") {
        period = period + "岁";
      }
      // 格式化缴费期间
      if (payIntervalType == "Y") {
        payInterval = payInterval + "年";
      } else if (payIntervalType == "M") {
        payInterval = payInterval + "月";
      }
      var mult = orderInfo.mult;
      // 保费试算
      var saleMapper = insureInfoDetail.propertyMapperExcel;
      if(saleMapper != undefined && saleMapper != "") {
      var amt = ""; // 保费
      for (var i = 0; i < saleMapper.length;i++){
        if (planName == undefined || value['protectPlan'].trim() == '' || value['protectPlan'].trim() == planName) {   // 产品编码是计算保费的一个标识  所以不能为空
          if (sex == undefined || value['sex'] == '' || value['sex'] == sex) {
            
          }
        }
      }  
      // $.each(saleMapper, function (n, value) {
      //   // 筛选产品
      //   if (planName == undefined || value['protectPlan'].trim() == '' || value['protectPlan'].trim() == planName) {   // 产品编码是计算保费的一个标识  所以不能为空
      //     // 筛选筛选性别
      //     if (sex == undefined || value['sex'] == '' || value['sex'] == sex) {
      //       // 1、value含有key=period属性  并且该属性值不为空时进行保险期间的筛选，2、

      //       if (payInterval == undefined || value['chargePeriod'] == '' || value['chargePeriod'] == payInterval) {

      //         if (period == undefined || value['insurePeriod'] == '' || value['insurePeriod'] == period) {
      //           // value含有key=age  属性，同时这个值不为空时，进行年龄范围的筛选
      //           if (value['insuredAge'] && value['insuredAge'] != "" && value['insuredAge'] != "-") {
      //               var checkMin = "";
      //               var checkMax = "";
      //               var ageUnit = age.substring(age.length - 1); // 获取用户年龄单位 D/Y
      //               var ageVal = age.substring(0, age.length - 1); // 获取用户年龄
      //               var ageMapper = value['insuredAge'];  // 获取配置中的年龄范围
      //               var ageMapperArry = ageMapper.split("-"); //eg: [60D,17Y]

      //               // 18Y的情况
      //               if (ageMapperArry.length == 1) {  // 按照年龄匹配最大值年龄
      //                 var beginUnit = ageMapperArry[0].substring(ageMapperArry[0].length - 1);  // 获取单位 eg:60
      //                 var beginVal = ageMapperArry[0].substring(0, ageMapperArry[0].length - 1);  // 获取单位 eg: D
      //                 if (beginUnit == "天") {
      //                   beginUnit = "D";
      //                 } else if (beginUnit == "年") {
      //                   beginUnit = "Y";
      //                 }
      //                 if (ageUnit == beginUnit && parseInt(ageVal) == parseInt(beginVal)) {       // 单位相同
      //                   checkMin = true;
      //                   checkMax = true;
      //                 } else {                      // 单位不同
      //                   checkMin = false;
      //                   checkMax = false;
      //                 }
      //               } else { //18Y-65Y的情况
      //               $.each(ageMapperArry, function (n, value) {
      //                 if (n == parseInt('0')) {  // 最小年龄  eg:60D
      //                   var beginUnit = value.substring(value.length - 1);  // 获取单位 eg:60
      //                   var beginVal = value.substring(0, value.length - 1);  // 获取单位 eg: D
      //                   if (beginUnit == "天") {
      //                     beginUnit = "D";
      //                   } else if (beginUnit == "年") {
      //                     beginUnit = "Y";
      //                   }
      //                   if (ageUnit == beginUnit) {       // 单位相同
      //                     if (parseInt(ageVal) >= parseInt(beginVal)) {
      //                       checkMin = true;
      //                     } else {
      //                       checkMin = false;
      //                     }
      //                   } else {                      // 单位不同
      //                     if (ageUnit == 'D' && beginUnit == 'Y') {
      //                       checkMin = false;
      //                     } else if (ageUnit == 'Y' && beginUnit == 'D') {
      //                       checkMin = true;
      //                     }
      //                   }
      //                 }
      //                 if (n == parseInt('1')) {  // 最大年龄
      //                     var endUnit = value.substring(value.length - 1);  // 获取单位
      //                     var endVal = value.substring(0, value.length - 1);  // 获取单位  eg: D/Y
      //                   if (endUnit == "天") {
      //                     endUnit = "D";
      //                   } else if (endUnit == "年") {
      //                     endUnit = "Y";
      //                   }
      //                   if (ageUnit == endUnit) {
      //                     if (parseInt(ageVal) <= parseInt(endVal)) {
      //                       checkMax = true;
      //                     } else {
      //                       checkMax = false;
      //                     }
      //                   } else {
      //                     if (ageUnit == 'D' && endUnit == 'Y') {
      //                       checkMax = true;
      //                     } else if (ageUnit == 'Y' && endUnit == 'D') {
      //                       checkMax = false;
      //                     }
      //                   }
      //                 }
      //               })
      //             }

      //             if (checkMax && checkMin) {   // 最终出生日期也正确了  则开始计算保费
      //               if (value['amt'] == undefined || value['amt'] == "") {
      //                 amt = "--";
      //               } else {
      //                 amt = value['amt'];
      //               }
      //             }
      //           } else {
      //             if (value['amt'] == undefined || value['amt'] == "") {
      //               amt = "--";
      //             } else {
      //               amt = value['amt'];
      //             }
      //           }
      //         }
      //       }
      //     }
      //   }
      // });
      amt = amt.replace(/,/g, "");
      return amt
    }else {
      return ""
    }
  },
})