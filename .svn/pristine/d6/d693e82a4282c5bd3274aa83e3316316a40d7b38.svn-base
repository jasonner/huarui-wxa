//app.js
const hrp = require('api/hrp.js')
const customer = require('api/customer.js')
import WxRequest from './assets/plugins/wx-request/lib/index'
import WxValidate from './assets/plugins/wx-validate/WxValidate'
import WxService from './assets/plugins/wx-service/WxService'
import http from './utils/http.js'

App({
  data:{
    thirdAuth:{
      "token":"2c9fc8c22d584bf7aed45a277bd844fc",
      "thirdToken":"2c9fc8c22d584bf7aed45a277bd844fc",
      "loginToken": "fba61b93627a4ed390c69d627583ec8d",
      "refreshToken": "fba61b93627a4ed390c69d627583ec8d",
      "regSystemType": "1"
    },
    isLogin:false
  },
  
  onLaunch: function () {

    // 展示本地存储能力
    var logs = wx.getStorageSync('logs') || []
    logs.unshift(Date.now())
    wx.setStorageSync('logs', logs)
   
    // 登录
    wx.login({
      success: res => {
        console.log(res.code)
        // 发送 res.code 到后台换取 openId, sessionKey, unionId
        if (res.code) {
          console.log(res.code)
          // console.log(this.data.thirdAuth)
          // console.log(this.data.thirdAuth.token)
          // if (this.data.thirdAuth.token != ''){
          //     console.log('登陆成功')
          //     this.data.isLogin = true;
          // }else{
          //     console.log('登录失败')
          //     this.data.isLogin = false;
          // }
          // console.log(this.data.isLogin)
          //发起网络请求
          customer.thirdAuth({ "type": "wx", "thirdType": "wxa", "system": "hr","code":res.code}).then((data)=>{
            console.log(1210)
            console.log(data);
            console.log(1210)
          })
        } else {
          console.log('获取用户登录态失败！' + res.errMsg)
        }
      }
    })
   
    // 获取用户信息
    wx.getSetting({
      success: res => {
        console.log(1)
        console.log(res.authSetting['scope.userInfo'])
        if (res.authSetting['scope.userInfo']) {
          // 已经授权，可以直接调用 getUserInfo 获取头像昵称，不会弹框
          wx.getUserInfo({
            success: res => {
              // 可以将 res 发送给后台解码出 unionId
              console.log(1)
              this.globalData.userInfo = res.userInfo
              console.log(res.userInfo)
              // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
              // 所以此处加入 callback 以防止这种情况
              if (this.userInfoReadyCallback) {
                this.userInfoReadyCallback(res)
              }
            }
          })
        }
      }
    })
  },
  globalData: {
    userInfo: null 
  },
  WxValidate: (rules, messages) => new WxValidate(rules, messages)
})