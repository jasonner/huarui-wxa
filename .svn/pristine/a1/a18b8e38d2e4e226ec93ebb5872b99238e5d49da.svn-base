 // pages/memberHome/memberHome.js
const app = getApp()
const util = require('../../utils/util.js')
const customer = require('../../api/customer.js')
import http from '../../utils/http.js'

Page({

  /**
   * 页面的初始数据
   */
  data: {
    showView: false,
    userInfo: {},
    hasUserInfo: true,
    canIUse: wx.canIUse('button.open-type.getUserInfo'),
    isLogin:app.data.isLogin,
    isSend:true,
    getCodeNum:'获取验证码',
    isFormOk: true,
    errorMsg: null,
    buttonDisable:false,
    telNum:'',
    graphCode:'',
    form: {
      tel : "",
      smsInfo : "",
    }
  },
  
  cancel: function () {
    console.log(1)
    this.setData({
      showView: false
    });
  },
  login: function (){
    console.log(2)
    this.setData({
      showView:true
    }); 
  },
  confirm: function () {
    var that = this;
    that.setData({
      showView: (!that.data.showView)
    })
  },
  myPolicyDdetail: function (isLogin){
    console.log(app.data.isLogin)
    if (isLogin){
      // 已登录，跳转至保单详情页
      console.log(3234)
      wx.redirectTo({
        url: '../user/index',
      })
    }else{
      // 未登录，弹窗提示登录
      this.login();
    }
     
  },
  
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function () { 
      // 初始化表单验证
      this.WxValidate = app.WxValidate(
      {
          tel: {
            required: true,
            tel: true
        },
          smsInfo: {
          required: true,
          smsInfo: true
        }
      },
      {
          tel: {
            required: '请输入手机号'
          },
          smsInfo: {
            required: '请输入短信验证码'
          }
      }
)
      console.log(this.WxValidate )

    //showView: (options.showView == "true" ? true : false)
    if (app.globalData.userInfo) {
      this.setData({
        userInfo: app.globalData.userInfo,
        hasUserInfo: true
      })
    } else if (this.data.canIUse) {
      // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
      // 所以此处加入 callback 以防止这种情况
      app.userInfoReadyCallback = res => {
        this.setData({
          userInfo: res.userInfo,
          hasUserInfo: true
        })
      }
    } else {
      // 在没有 open-type=getUserInfo 版本的兼容处理
      wx.getUserInfo({
        success: res => {
          app.globalData.userInfo = res.userInfo
          this.setData({
            userInfo: res.userInfo,
            hasUserInfo: true
          })
        }
      })
    }
  },

  //获取手机验证手机号输入值
  mobileinput: function (e) {
    this.setData({
      telNum:e.detail.value
    })
    
  },
  //获取手机验证短信验证码输入值
  smsinput: function (e) {
    console.log(e.detail.value)
    this.setData({
      smsNum: e.detail.value
    })
  },
  //获取图形验证码输入值
  graphinput: function (e) {
    console.log(e.detail.value)
    this.setData({
      graphCode: e.detail.value
    })
  },
  //验证码倒计时
  waitSend:function(i){
    if (this.data.buttonDisable){
      return false;
    }
    var that = this;
    var intervalId = setInterval(function () {
      i--;
      that.setData({
        getCodeNum: "重新获取(" + i + ")",
        buttonDisable: true
      })
      if (i == 0) {
        clearInterval(intervalId);
        that.setData({
          getCodeNum: '获取验证码',
          buttonDisable: false
        })
      }
    }, 1000)
  },

  //获取验证码事件
  getSecurityCode: function (e) {
    var mobile = this.data.telNum;
    var regMobile = /^(((13[0-9]{1})|(15[0-9]{1})|(18[0-9]{1})|(17[0-9]{1}))+\d{8})$/;
    if (!regMobile.test(mobile)) {
      if (mobile == ''){
        wx.showModal({
          title: '提示',
          content: '请输入手机号',
        })
      }else{
        wx.showModal({
          title: '提示',
          content: '请输入11位的手机号码。',
        })
      }
    
      return false;
    }else{
      this.waitSend(60);
      // 调发送短信验证码接口
      var thirdToken = wx.getStorage({
        key: 'thirdToken',
        success: function(res) {
          console.log(res.data)
          // 请求发送短信验证码
          http.all([customer.smsSend({ mobile: mobile, graphId: '', graphCode: '', operateType: 'regandlogin', thirdToken: thirdToken,system:'hr'})]).then((data) => {
            console.log(data)
          })
        },
      })
      
      
    }
  },
  
  
  // 登录验证事件
  formSubmit: function (e) {
    var that = this;
    e.detail.value.tel = this.data.telNum;
    console.log(this.data.telNum)
    if (!this.WxValidate.checkForm(e)) {
            const error = this.WxValidate.errorList[0];
            this.setData({
                isFormOk: false,
                errorMsg: error.msg,
              });

        wx.showModal({
        title: '提示',
            content: error.msg,
            showCancel: false,
            success: function (res) {
                if (res.confirm) {
                    console.log('用户点击确定')
                    }
              }
          });
    }
    //发送请求
    //     wx.request({
    //         url: 'http://192.168.1.111:8080/user/signUp.html', //仅为示例，并非真实的接口地址
    //         method : "POST",
    //         data: e.detail.value,
    //         header: {
    //           'content-type': 'application/json'
    //         },
    //         success: function (res) {
    //           console.log(res.data)
    //         }
    //     })
  
    //   if (isFormOk) {
    //       wx.redirectTo({
    //         url: '../bindCard/bindCard'
    //         });
    // }
   

  },
  getUserInfo: function (e) {
    console.log(e)
    app.globalData.userInfo = e.detail.userInfo
    this.setData({
      userInfo: e.detail.userInfo,
      hasUserInfo: true
    })
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
  
  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
  
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {
  
  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {
  
  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {
  
  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {
  
  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {
  
  }
})
  